package ru.olgak.folks.soap;

import javax.annotation.Generated;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.2.5
 * 2018-09-01T09:15:45.239+03:00
 * Generated source version: 3.2.5
 *
 */
@WebServiceClient(name = "SoapPartyService",
                  wsdlLocation = "classpath:wsdl/folks.wsdl",
                  targetNamespace = "http://olgak.ru/folks/v1")
@Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2018-09-01T09:15:45.239+03:00", comments = "Apache CXF 3.2.5")
public class SoapPartyService extends Service {

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2018-09-01T09:15:45.239+03:00")
    public final static URL WSDL_LOCATION;

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2018-09-01T09:15:45.239+03:00")
    public final static QName SERVICE = new QName("http://olgak.ru/folks/v1", "SoapPartyService");
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2018-09-01T09:15:45.239+03:00")
    public final static QName FolksWS = new QName("http://olgak.ru/folks/v1", "FolksWS");
    static {
        URL url = SoapPartyService.class.getClassLoader().getResource("wsdl/folks.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(SoapPartyService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/folks.wsdl");
        }
        WSDL_LOCATION = url;
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2018-09-01T09:15:45.239+03:00")
    public SoapPartyService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2018-09-01T09:15:45.239+03:00")
    public SoapPartyService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2018-09-01T09:15:45.239+03:00")
    public SoapPartyService() {
        super(WSDL_LOCATION, SERVICE);
    }





    /**
     *
     * @return
     *     returns FolksWS
     */
    @WebEndpoint(name = "FolksWS")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2018-09-01T09:15:45.239+03:00")
    public FolksWS getFolksWS() {
        return super.getPort(FolksWS, FolksWS.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FolksWS
     */
    @WebEndpoint(name = "FolksWS")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2018-09-01T09:15:45.239+03:00")
    public FolksWS getFolksWS(WebServiceFeature... features) {
        return super.getPort(FolksWS, FolksWS.class, features);
    }

}
